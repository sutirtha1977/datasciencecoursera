x <- c("a","b","c","d")
for (letter in x) {}
x <- c("a","b","c","d")
for (letter in x) { print letter}
for (letter in x) { print(letter)}
for(i in seq_along(x)) { print(x[i])}
x <- matrix(1:6,2,3)
for (i in seq_len(nrow(x))) {}
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[i,j])}}
q()
x <- 6:14
x
use <- x > 10
use
x[use]
q()
search()
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10<=10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins','twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints >7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(std,c(1.4, 3.6, 7.9, 8.8))
evaluate(stdev,c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegraph("Hi", "Sutirtha")
telegram("Hi", "Sutirtha")
submit()
mad_libs("test","test","test")
submit()
"I" %p% "love" % "R!"
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
x <- 1:10
if (x >5) { x<- 0}
f <- function(x) {#
        g <- function(y) {#
                y + z#
        }#
        z <- 4#
        x + g(x)#
}
z <- 10
f(3)
x <- 5#
y <- if(x < 3) {#
        NA#
} else {#
        10#
}
y
?mean
?file.path
mchar(1)
nchar(1)
nchar(22)
nchar(123123)
getwd()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
formatC(i, width = 3, flag = "0")
formatC(1, width = 3, flag = "0")
formatC(11, width = 3, flag = "0")
formatC(111, width = 3, flag = "0")
getwd()
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))#
print(cc$nobs)
cc <- complete("specdata", 54)#
print(cc$nobs)
set.seed(42)#
cc <- complete("specdata", 332:1)#
use <- sample(332, 10)#
print(cc[use, "nobs"])
cr <- corr("specdata")                #
cr <- sort(cr)                #
set.seed(868)                #
out <- round(cr[sample(length(cr), 5)], 4)#
print(out)
cr <- corr("specdata", 129)                #
cr <- sort(cr)                #
n <- length(cr)                #
set.seed(197)                #
out <- c(n, round(cr[sample(n, 5)], 4))#
print(out)
cr <- corr("specdata", 2000)                #
n <- length(cr)                #
cr <- corr("specdata", 1000)                #
cr <- sort(cr)#
print(c(n, round(cr, 4)))
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x,mean)
lapply(x,mean)$a
x <- 1:4
lapply(x, runif)
x <- list(a =matrix(1:4,2,2), b = matrix(1:6,3,2))
x
lapply(x,function(elt) elt[,1])
x <- list(a = 1:4, b = rnorm(10), c=rnorm(20,1), d= rnorm(100,5))
lapply(x,mean)
sapply(x,mean)
mean(x)
a <- array(rnorm(2*2*10), c(2,2,10))
a
str(split)
library(datasets)
head(airquality)
?gl
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_not
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5,#
| 6, 6))
unique(c(3, 4, 5, 5, 5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)#
data(iris)
?iris
head(iris)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
debug(ls)
ls
round(apply(iris[, 1:4], 2, mean))
round(mean(iris[iris$Species == "virginica",]$Sepal.Length))
round(mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp))
source("ProgrammingAssignment2/cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(1:4,2,2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getInverse()
my_matrix(matrix(c(2,2,1,4),2,2))
my_matrix$set(matrix(c(2,2,1,4),2,2))
my_matrix$get()
my_matrix$getInverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getInverse()
